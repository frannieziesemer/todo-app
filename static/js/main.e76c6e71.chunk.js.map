{"version":3,"sources":["components/header/header.component.jsx","components/app-wrapper/app-wrapper.component.jsx","components/submit-form/submit-form.component.jsx","components/todo-item/todo-item.component.jsx","components/todo-list/todo-list.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","className","AppWrapper","children","SubmitForm","state","title","content","onSubmit","event","preventDefault","props","handleAdd","setState","this","type","placeholder","value","onChange","target","onClick","React","Component","TodoItem","task","description","onDelete","index","TodoList","tasks","map","id","App","handleDelete","newArr","console","log","fetch","method","then","response","text","todos","splice","headers","body","JSON","stringify","json","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e76c6e71.chunk.js","sourcesContent":["import React from 'react';\r\nimport './header.css';\r\n\r\nexport function Header() {\r\n  return (\r\n    <div className=\"header container is-12\">\r\n      <br/>\r\n      <h1 className=\"p-4 is-size-2 has-weight-semi-bold\">Frannie's ToDo's</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from '../header/header.component';\r\nimport './app-wrapper.css';\r\n\r\nfunction AppWrapper ( { children }) {\r\n  return (\r\n    <div className=\"app-wrapper container\">\r\n      <Header></Header>\r\n      <div className=\"columns\"> {children} </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AppWrapper;","import React from 'react';\r\nimport './submit-form.css';\r\n\r\n// we need to use a class component because we have state information/ updating inside the component \r\nclass SubmitForm extends React.Component {\r\n  //state object, input is undefined because we want the input clear field empty on load\r\n  state = {\r\n    title: '',\r\n    content: '',\r\n  }\r\n\r\n  //onSubmit function is an event called in the <form> tag and called when submit button is clicked \r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n    //onSubmit function calls handle submit function from App.js component\r\n    //handleSubmit function has been sent down to this component via props\r\n    //it passes in the input value \r\n    this.props.handleAdd(this.state);\r\n    //sets state back to empty for the input field on submit\r\n    this.setState({ title: '', content: '', });\r\n\r\n  }\r\n\r\n\r\n  render () {\r\n  return (\r\n    <div className=\"submit-form\">\r\n      <form className=\"field\" onSubmit={this.onSubmit}>\r\n        <div className=\"control\">\r\n          <label>Add new:</label>\r\n          <input \r\n            className=\"input mr-4 mt-2\" \r\n            type=\"text\" \r\n            placeholder=\"Add new list item here...\" \r\n            value = {this.state.title}\r\n            //onChange to handle input value \r\n            // updates state (title) object within this component\r\n            onChange={(event) => this.setState({title: event.target.value})}\r\n          />\r\n          \r\n         \r\n        </div>\r\n        <div className=\"\">\r\n          <textarea \r\n            placeholder=\"Content\" \r\n            value={this.state.content} \r\n            onChange={(event) => this.setState({content: event.target.value})}\r\n            className=\"textarea mt-2 mb-2\"\r\n          ></textarea>\r\n          \r\n        </div>\r\n        <div>\r\n          <button className=\"button is-primary mr-2 \">Add +</button>\r\n          <button \r\n            className=\"button is-info\" \r\n            type=\"reset\"\r\n            onClick={(event) => this.setState({title: '', content: '' })}\r\n          >Reset</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n  }\r\n}\r\n\r\nexport default SubmitForm;","import React from 'react';\r\nimport { TrashIcon } from '@primer/octicons-react';\r\nimport './todo-item.css';\r\n\r\nfunction TodoItem(props) {\r\n\r\n\r\n  return (\r\n    <div className=\"todo-item box\">\r\n      <h3 className=\"task-title\">{props.task}</h3>\r\n      <p className=\"block\">{props.description}</p>\r\n      <button onClick={() => props.onDelete(props.index)} className=\"button is-danger is-light\"><TrashIcon /></button>\r\n      {/* we send a function down through props and call it on an onClick event-\r\n       -this passes the info (index number) back up to App.js */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoItem;","import React from 'react';\r\nimport TodoItem from '../todo-item/todo-item.component';\r\n\r\nfunction TodoList(props) {\r\n  return (\r\n    <div className=\"todo-list\">\r\n      {props.tasks.map((task, index) => \r\n        <TodoItem \r\n          key={task.id} \r\n          task={task.title}\r\n          description={task.content} \r\n          index={index}  \r\n          onDelete={props.onDelete} \r\n        />)}   \r\n      {/* render content(props) inside {} {props.tasks(takes info from props)\r\n        .map(maps through tasks array and renders as TodoItem for all of the items)\r\n        key= is reauired when do ing map method so we can use the index of the props array ?? not sure, just is\r\n        item= sends down task information as a prop into TodoItem component\r\n        } */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoList;","import React from 'react';\nimport './App.css';\nimport AppWrapper from './components/app-wrapper/app-wrapper.component';\nimport SubmitForm from './components/submit-form/submit-form.component';\nimport TodoList from './components/todo-list/todo-list.component';\n\n\nclass App extends React.Component{\n  //state objects here \n  state = {\n    tasks: [],\n    //maybe need a loading state here:\n    //isLoading is to inform the user that the site is fetching data -\n    // it may take a few seconds\n\n  }\n\n  //functions here\n\n\n  handleDelete = (index) => {\n    //create a copy of the current tasks array\n    const newArr = [...this.state.tasks];\n    //find the id of the task via index that was passed into this function\n    const id = newArr[index].id;\n    console.log(id);\n    //here we have to add the id to the end of the url because we need to target the correct api object\n    fetch(\"https://frauenloop-todo-service.herokuapp.com/api/todos/\" + id, {\n      method: 'DELETE'\n    })\n    //why is this text???\n      .then(response => response.text())\n      .then(todos => {\n        //remove the item from index \n        newArr.splice(index, 1);\n        //re - setState as new array\n        this.setState({ tasks: newArr });\n      });\n  }\n\n  //this function ultimately takes the input data that we have saved in the state object (title and content ) \n  // then it adds it to the api !!\n  handleAdd = task => {\n    fetch(\"https://frauenloop-todo-service.herokuapp.com/api/todos\", {\n      //Post is the instruction to add to api \n      method: 'POST',\n      //look this up??? \n      headers: {\n        'Content-Type': 'application/json'\n      },\n      // i think this part turns the data into the correct json format\n      body: JSON.stringify(task)\n    })\n      .then(response => response.json())\n      .then(task => {\n        //takes input  from submit-form component and adds it to json api data\n        this.setState({ tasks: [...this.state.tasks, task] });\n      });\n  };\n\n\n\n  // this function does the first step of api call \n  //cDM() executes a second render (1st render()) of the page with the data fetched from api\n  //after cDM() function api date is stored locally and can be displayed or passed to other functions as props\n  //cDM means that component is rendered\n  componentDidMount() {\n    fetch(\"https://frauenloop-todo-service.herokuapp.com/api/todos\")\n      //pulls the response from url into json file\n      .then(response => response.json())\n      //updates our state object to = the json file \n      //(todos refers to complete data inside api)\n      .then(todos => {\n        this.setState({ tasks: todos });\n      });\n  }\n\n  render() {\n  return (\n   //JSX here\n      <AppWrapper> \n        <div className=\"column  m-4\"> \n          <div className=\"row box\">     \n              {/* here we have to send the handleAdd function downwards using props called handleAdd. */}\n              <SubmitForm handleAdd={this.handleAdd} />\n        </div>\n        <div className=\"row\"> </div>\n        </div>\n        <div className=\"column box mt-5 mr-6\"> \n          <TodoList tasks={this.state.tasks} onDelete={this.handleDelete} />\n        </div>\n      </AppWrapper>  \n  \n  );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}